* {
    -webkit-font-smoothing: antialiased;
}

@mixin border-radius($value: 3px) {
    -webkit-border-radius: $value;
    -moz-border-radius: $value;
    border-radius: $value;
    -webkit-background-clip: padding-box;
    -moz-background-clip: padding;
    background-clip: padding-box;
}

@mixin hidetext {
    text-indent: 100%;
    white-space: nowrap;
    overflow: hidden;
}

@mixin opacity($value: 0.5) {
    opacity: $value;
    -ms-filter: progid:DXImageTransform.Microsoft.Alpha(Opacity= $value * 100);
    filter: alpha(opacity = $value * 100);
    zoom: 1;
}

@mixin box-shadow($horiz: 0.5em, $vert: 0.5em, $blur: 0px, $spread: 0px, $color: black) {
    -webkit-box-shadow: $horiz $vert $blur $spread $color;
    -moz-box-shadow: $horiz $vert $blur $spread $color;
    box-shadow: $horiz $vert $blur $spread $color;
}

@function calculateRem($size) {
    $remSize: $size / 16px;
    @return $remSize * 1rem;
}

@mixin font-size($size) {
    font-size: $size;
    font-size: calculateRem($size);
}

@mixin background-image-retina($file, $type, $width, $height) {
    background-image: url($file + "." + $type);
    @media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (-moz-min-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2 / 1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx) {
        & {
            background-image: url($file + "@2x." + $type);
            -webkit-background-size: $width $height;
            -moz-background-size: $width $height;
            -o-background-size: $width $height;
            background-size: $width $height;
        }
    }
}

@mixin font-face($font-family, $file-path) {
    @font-face {
        font-family: $font-family;
        src: url("#{$file-path}.eot");
        src: url("#{$file-path}.eot?#iefix") format("embedded-opentype"), url("#{$file-path}.woff") format("woff"), url("#{$file-path}.ttf") format("truetype"), url("#{$file-path}.svg##{$font-family}") format("svg");
    }
}

@mixin transition($delay) {
    -webkit-transition: all $delay ease-out;
    -moz-transition: all $delay ease-out;
    -o-transition: all $delay ease-out;
    transition: all $delay ease-out;
}

@mixin center-block {
    display: block;
    margin-left: auto;
    margin-right: auto;
}